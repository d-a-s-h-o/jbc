{VERSION 4 0 "IBM INTEL NT" "4.0" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 1 12 128 0 128 1 0 1 
0 0 1 0 0 0 0 1 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 
0 0 0 0 1 }{CSTYLE "2D Comment" 2 18 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
1 }{CSTYLE "2D Output" 2 20 "" 0 0 0 128 0 1 0 1 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 256 "" 1 18 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
257 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 258 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 259 "" 0 1 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 }{CSTYLE "" -1 260 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 261 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
262 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 263 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 264 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 265 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 266 "" 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 }{CSTYLE "" -1 
267 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 268 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 269 "" 0 14 0 0 0 0 0 0 1 0 
0 0 0 0 0 1 }{CSTYLE "" -1 270 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 271 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
272 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 273 "" 0 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 274 "" 0 1 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 }{CSTYLE "" -1 275 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 276 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
277 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 278 "" 0 1 0 0 
0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 279 "" 0 14 0 0 0 0 1 0 0 0 0 
0 0 0 0 1 }{CSTYLE "" -1 280 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 281 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
282 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 283 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 284 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 285 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 286 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
287 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 288 "" 1 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 289 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 290 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 291 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
292 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 293 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 294 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 295 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 296 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
297 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 298 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 299 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 300 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 301 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
302 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 303 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 304 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 305 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 306 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
307 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 308 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 309 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 310 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 311 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
312 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 313 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 314 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 315 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 316 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
317 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 318 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 319 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 320 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 321 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
322 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 323 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 324 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 325 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 326 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
327 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 328 "" 1 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 329 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 330 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 331 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
332 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 333 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 334 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 335 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 336 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
337 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 338 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 339 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 340 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 341 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
342 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 343 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 344 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 345 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 346 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
347 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 348 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 349 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 350 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 351 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
352 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 353 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 354 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 355 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 356 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
357 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 358 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 359 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 360 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 361 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
362 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 363 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 364 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 365 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 366 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
367 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 368 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 369 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 370 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 371 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
372 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 373 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 374 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 375 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 376 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
377 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 378 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 379 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 380 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 381 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
382 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 383 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 384 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 385 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 386 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
387 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 388 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 389 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 390 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 391 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
392 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 393 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 394 "" 0 1 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 }{CSTYLE "" -1 395 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 396 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
397 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 398 "" 0 1 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 399 "" 0 14 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 }{CSTYLE "" -1 400 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 401 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
402 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 403 "" 0 1 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 404 "" 0 14 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 }{CSTYLE "" -1 405 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 406 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
407 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 408 "" 1 14 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 409 "" 0 14 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 }{CSTYLE "" -1 410 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 411 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
412 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 413 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 414 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 415 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 416 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
417 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 418 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 419 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 420 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 421 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
422 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 423 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 424 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 425 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 426 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
427 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 428 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 429 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 430 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 431 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
432 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 433 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 434 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 435 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 436 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
437 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 438 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 439 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 440 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 441 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
442 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 443 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 444 "" 1 12 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 445 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 446 "" 1 12 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
447 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 448 "" 1 12 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 449 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 450 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 451 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
452 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 453 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 454 "" 1 12 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 455 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 456 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
457 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 458 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 459 "" 1 12 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 460 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 461 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
462 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 463 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 464 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 465 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 466 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
467 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 468 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 469 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 470 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 471 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
472 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 473 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 474 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 475 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 476 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
477 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 478 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 479 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 480 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 481 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
482 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 483 "" 1 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 484 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 485 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 486 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
487 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 488 "" 0 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 489 "" 0 14 0 0 0 0 2 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 490 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 491 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
492 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 493 "" 0 14 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 494 "" 0 14 0 0 0 0 0 0 0 0 0 
0 0 0 0 1 }{CSTYLE "" -1 495 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 496 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
497 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 498 "" 1 12 0 0 
0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 499 "" 0 1 0 0 0 0 0 0 1 0 0 0 
0 0 0 1 }{CSTYLE "" -1 500 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 501 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
502 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 503 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 504 "" 0 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 505 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 506 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
507 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 508 "" 0 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 509 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 510 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 511 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
512 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 513 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 514 "" 0 14 0 0 0 0 0 0 1 0 
0 0 0 0 0 1 }{CSTYLE "" -1 515 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 516 "" 0 14 0 0 0 0 0 0 1 0 0 0 0 0 0 1 }{CSTYLE "" -1 
517 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 518 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 519 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 520 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 521 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
522 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 523 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 524 "" 0 1 0 0 0 0 1 0 0 0 0 
0 0 0 0 0 }{CSTYLE "" -1 525 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 526 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
527 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 528 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 529 "" 0 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 530 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 531 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
532 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 533 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 534 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 535 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 536 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
537 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 538 "" 1 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 539 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 540 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 541 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
542 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 543 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 544 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 545 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 546 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
547 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 548 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 549 "" 0 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 550 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 551 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
552 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 553 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 554 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 555 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 556 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
557 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 558 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 559 "" 0 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 560 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 561 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
562 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 563 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 564 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 565 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 566 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
567 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 568 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 569 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 570 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 571 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
572 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 573 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 574 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 575 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 576 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
577 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 578 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 579 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 580 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 581 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
582 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 583 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 584 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 585 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 586 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
587 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 588 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 589 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 590 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 591 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
592 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 593 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 594 "" 1 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 595 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 596 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
597 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 598 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 599 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 600 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 601 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
602 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 603 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 604 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 605 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 606 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
607 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 608 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 609 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 610 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 611 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
612 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 613 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 614 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 615 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 616 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
617 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 618 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 619 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 620 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 621 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
622 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 623 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 624 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 625 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 626 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
627 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 628 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 629 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 630 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 631 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
632 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 633 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 634 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 635 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 636 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
637 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 638 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 639 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 640 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 641 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
642 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 643 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 644 "" 1 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 645 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 646 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
647 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 648 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 649 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 650 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 651 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
652 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 653 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 654 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 655 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 656 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
657 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 658 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 659 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 660 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 661 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
662 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 663 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 664 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 665 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 666 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
667 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 668 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 669 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 670 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 671 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
672 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 673 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 674 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 675 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 676 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
677 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 678 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 679 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 680 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 681 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
682 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 683 "" 1 12 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 684 "" 1 12 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 685 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 686 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
687 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 688 "" 1 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 689 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 690 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 691 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
692 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 693 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 694 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 695 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 696 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
697 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 698 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 699 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 700 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 701 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
702 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 703 "" 1 12 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 704 "" 1 12 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 705 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 706 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
707 "" 1 12 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 708 "" 0 1 0 0 
0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 709 "" 0 1 0 0 0 0 1 0 0 0 0 0 
0 0 0 0 }{CSTYLE "" -1 710 "" 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 711 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
712 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 713 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 714 "" 0 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 715 "" 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 }
{CSTYLE "" -1 716 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
717 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 718 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 719 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 1 }{CSTYLE "" -1 720 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 721 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
722 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 723 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 724 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 725 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }
{CSTYLE "" -1 726 "" 0 14 0 0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 
727 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 728 "" 0 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 }{CSTYLE "" -1 729 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 730 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 731 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
732 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 733 "" 1 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 734 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 735 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 736 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
737 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 738 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 739 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 740 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 741 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
742 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 743 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 744 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 745 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 746 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
747 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 748 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 749 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 750 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 751 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
752 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 753 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 754 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 755 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 756 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
757 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 758 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 759 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 760 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 761 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
762 "" 1 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 763 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 764 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 765 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 766 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
767 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 768 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 769 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 770 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 771 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
772 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 773 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 774 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 775 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 776 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
777 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 778 "" 1 14 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 779 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 780 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 781 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
782 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 783 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 784 "" 0 14 0 0 0 0 1 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 785 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 786 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 
787 "" 0 14 0 0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 788 "" 0 14 0 
0 0 0 1 0 0 0 0 0 0 0 0 0 }{CSTYLE "" -1 789 "" 1 14 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 }{CSTYLE "" -1 790 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }
{CSTYLE "" -1 791 "" 1 14 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }{PSTYLE "Normal
" -1 0 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 128 1 2 1 2 2 2 2 1 1 1 1 }
1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Heading 1" -1 3 1 {CSTYLE "" -1 
-1 "Times" 1 18 0 0 128 1 2 1 2 2 2 2 1 1 1 1 }1 1 0 0 8 4 1 0 1 0 2 
2 0 1 }{PSTYLE "Bullet Item" -1 15 1 {CSTYLE "" -1 -1 "Times" 1 12 0 
0 128 1 2 1 2 2 2 2 1 1 1 1 }1 1 0 0 3 3 1 0 1 0 2 2 15 2 }{PSTYLE "R3
 Font 0" -1 256 1 {CSTYLE "" -1 -1 "Helvetica" 1 12 128 0 128 1 2 1 2 
2 2 2 1 1 1 1 }1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "R3 Font 2" -1 
257 1 {CSTYLE "" -1 -1 "Courier" 1 12 0 128 0 1 2 1 2 2 2 2 1 1 1 1 }
1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Normal" -1 258 1 {CSTYLE "" -1 
-1 "Times" 1 18 0 0 128 1 1 1 2 2 2 2 1 1 1 1 }1 1 0 0 0 0 1 0 1 0 2 
2 0 1 }{PSTYLE "Normal" -1 259 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 
128 1 2 1 2 2 2 2 1 1 1 1 }3 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Norma
l" -1 260 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 128 1 2 1 1 2 2 2 1 1 1 
1 }1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Normal" -1 261 1 {CSTYLE "" 
-1 -1 "Times" 1 18 0 0 128 1 2 1 2 2 2 2 1 1 1 1 }1 1 0 0 0 0 1 0 1 0 
2 2 0 1 }{PSTYLE "Normal" -1 262 1 {CSTYLE "" -1 -1 "Times" 1 14 0 0 
128 1 2 1 2 2 2 2 1 1 1 1 }1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Title
" -1 263 1 {CSTYLE "" -1 -1 "Times" 1 18 0 0 128 1 2 1 1 2 2 2 1 1 1 
1 }1 1 0 0 12 12 1 0 1 0 2 2 19 1 }{PSTYLE "Normal" -1 264 1 {CSTYLE "
" -1 -1 "Times" 1 14 0 0 128 1 2 1 2 2 2 2 1 1 1 1 }3 1 0 0 0 0 1 0 1 
0 2 2 0 1 }{PSTYLE "Normal" -1 265 1 {CSTYLE "" -1 -1 "Times" 1 18 0 
0 128 1 2 1 2 2 2 2 1 1 1 1 }3 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Nor
mal" -1 266 1 {CSTYLE "" -1 -1 "Times" 1 12 0 0 128 1 2 1 2 2 2 2 1 1 
1 1 }1 1 0 0 0 0 1 0 1 0 2 2 0 1 }{PSTYLE "Heading 2" -1 267 1 
{CSTYLE "" -1 -1 "Times" 1 12 0 0 128 1 2 1 2 2 2 2 1 1 1 1 }1 1 0 0 
8 2 1 0 1 0 2 2 0 1 }{PSTYLE "" 262 268 1 {CSTYLE "" -1 -1 "" 1 12 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "
" 0 269 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 }3 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }}
{SECT 0 {EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 17 "# CAdsICTCM16.mws" }
}}{SECT 1 {PARA 3 "" 0 "" {TEXT 284 13 "Title of talk" }}{PARA 259 "" 
0 "" {TEXT 256 51 "Bill Clinton, Bertie Ahern, and digital signatures
\n" }{TEXT 261 56 "(A Maple-based introduction to public-key cryptogra
phy)\n" }}{PARA 265 "" 0 "" {TEXT -1 0 "" }{TEXT 259 0 "" }{TEXT 260 
16 "For David Joyner" }{TEXT -1 1 " " }{TEXT 484 40 "(United States Na
val Academy, Annapolis)" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 259 "
" 0 "" {TEXT 257 97 "The Sixteenth Annual International Conference on \+
\nTechnology in Collegiate Mathematics (ICTCM16)\n" }{TEXT -1 1 "\n" }
{TEXT 258 51 "Hyatt Regency O'Hare Hotel, Chicago, Illinois, USA\n" }
{TEXT -1 1 "\n" }{TEXT 262 29 "October 30 - November 2, 2003" }{TEXT 
-1 1 "\n" }}{PARA 264 "" 0 "" {TEXT -1 94 "John B. Cosgrave, Mathemati
cs Department, \nSt. Patricks College, Drumcondra, Dublin 9, Ireland" 
}}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }
{TEXT 263 37 "email:       John.Cosgrave@spd.dcu.ie" }}{PARA 0 "" 0 "
" {TEXT -1 0 "" }{TEXT 264 35 "website:    www.spd.dcu.ie/johnbcos" }}
}{SECT 1 {PARA 3 "" 0 "" {TEXT 286 25 "Abstract and time comment" }
{TEXT 301 0 "" }}{PARA 0 "" 0 "" {TEXT -1 59 "Since 1995-96 I have tau
ght a 3rd year undergraduate course" }{TEXT 289 1 " " }{TEXT -1 0 "" }
{TEXT 290 30 "Number Theory and Cryptography" }{TEXT -1 1 " " }}{PARA 
0 "" 0 "" {TEXT -1 1 "(" }{TEXT 319 11 "using Maple" }{TEXT -1 228 ") \+
at St Patricks College. Before I had a web site (in June 1999), David \+
Joyner at the United States Naval Academy (Annapolis) asked if I would
 allow my course Maple worksheets be displayed at their site; they are
 still there at:" }{TEXT 298 1 " " }{TEXT -1 0 "" }}{PARA 259 "" 0 "" 
{TEXT -1 41 "http://web.usna.navy.mil/~wdj/crypto.htm\n" }}{PARA 0 "" 
0 "" {TEXT -1 73 "Subsequently I published a fairly full outline of my
 3rd year course in: " }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 
"" {TEXT 291 30 "Number Theory and Cryptography" }{TEXT -1 2 " (" }
{TEXT 292 11 "using Maple" }{TEXT -1 188 ") in David Joyner USNA (Ed.)
, Coding Theory and Cryptography: From Enigma to Geheimschreiber to Qu
antum Theory (Unites States Naval Academy Conference), Springer-Verlag
, 2000, pp 124-143.\n" }{TEXT 300 1 "\n" }{TEXT -1 385 "In September 1
998 the U.S. President, Bill Clinton, and the Irish Prime Minister Ber
tie Ahern engaged in a 'historic, first digital signing of a treaty on
 e-commerce' - at Gateway 2000's Dublin plant (Gateway's then European
 headquarters), and using software produced by Baltimore, the Irish cy
rptography company - between the U.S. and Irish governments, and in No
vember 1998 I gave a " }{TEXT 293 6 "public" }{TEXT -1 25 " lecture (u
sing Maple) - " }{TEXT 294 50 "Bill Clinton, Bertie Ahern, and digital
 signatures" }{TEXT -1 43 " - at my college, to explain the essential \+
" }{TEXT 315 13 "revolutionary" }{TEXT -1 10 " ideas of " }{TEXT 295 
23 "public-key cryptography" }{TEXT -1 48 ", that lay behind our gover
nments' signing. The " }{TEXT 317 11 "Irish Times" }{TEXT -1 185 " - o
ur leading daily newspaper - publicised my talk in advance, and invite
d me to contribute an explanatory article prior to my lecture (that ar
ticle used to be freely available at the " }{TEXT 320 5 "Times" }
{TEXT -1 222 "' site, but unfortunately they now charge for access). T
hat talk - which took me about 70 mins to deliver - is available in ac
tive Maple mws format, or in html format in the Public and Other Lectu
res corner of my web site." }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 
"" 0 "" {TEXT -1 217 "Since November 1998 I have used that public lect
ure to introduce my course to my students: my aim has been to show jus
t how much one can cover with a general public audience. My third year
 course then entails putting " }{TEXT 296 18 "mathematical flesh" }
{TEXT -1 299 " on that public lecture. My students have already studie
d Number Theory in their second year, that course consisting of three \+
core areas: Congruences, the Euclidean Algorithm and its extension, an
d Fermat's 'little' theorem with applications, plus some other topics \+
that I change from year to year. " }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}
{PARA 0 "" 0 "" {TEXT -1 263 "Here in Chicago I offer a much revised v
ersion of my 1998 Clinton-Ahern talk to college mathematics faculty: e
.g. the inclusion of the Pohlig-Hellman material is entirely new. No p
rior knowledge of Number Theory will be required to follow my talk, in
 which I will" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }{TEXT 321 0 "" }}
{PARA 15 "" 0 "" {TEXT -1 7 "Briefly" }{TEXT 589 8 " explain" }{TEXT 
-1 24 " the difference between " }{TEXT 322 8 "private-" }{TEXT -1 8 "
key and " }{TEXT 323 6 "public" }{TEXT -1 17 "-key cryptography" }}
{PARA 15 "" 0 "" {TEXT 308 11 "Demonstrate" }{TEXT -1 20 " the Pohlig-
Hellman " }{TEXT 590 7 "private" }{TEXT -1 25 "-key cryptographic meth
od" }}{PARA 15 "" 0 "" {TEXT 485 11 "Demonstrate" }{TEXT -1 59 " a sim
plified element of the renowned Rivest-Shamir-Adleman" }{TEXT 297 1 " \+
" }{TEXT -1 6 "(RSA) " }{TEXT 591 6 "public" }{TEXT -1 4 "-key" }
{TEXT 299 1 " " }{TEXT -1 13 "cryptographic" }{TEXT 303 1 " " }{TEXT 
-1 6 "method" }{TEXT 486 0 "" }}{PARA 15 "" 0 "" {TEXT 309 10 "Illustr
ate" }{TEXT -1 57 " the relevance of the unsolved fast factorisation p
roblem" }{TEXT 302 1 " " }{TEXT -1 33 "to the security of the RSA meth
od" }{TEXT 304 1 " " }{TEXT -1 42 "(and, if I have time, also have a l
ook at " }{TEXT 784 8 "phi of n" }{TEXT -1 4 "...)" }}{PARA 262 "" 0 "
" {TEXT -1 0 "" }}{PARA 266 "" 0 "" {TEXT -1 302 "The core content of \+
my 3rd year Number Theory and Cryptography course, my preparatory 2nd \+
year Number Theory course, and related examination papers (3-hour writ
ten, 2-hour Maple, and one set of student Maple solutions) are all ava
ilable at my web site: visit my home page and follow the obvious links
.\n" }}{PARA 266 "" 0 "" {TEXT -1 28 "A related paper of mine is: " }
{TEXT 310 82 "From divisibility by 6 to the Euclidean Algorithm and th
e RSA cryptographic method" }{TEXT -1 100 ", The American Mathematical
 Association of Two-Year Colleges Review, Vol 19, No 1, Fall 1997, 38-
45." }}{PARA 264 "" 0 "" {TEXT -1 15 "_______________" }}{PARA 262 "" 
0 "" {TEXT -1 1 "\n" }{TEXT 592 309 "Time comment. Because of the amou
nt of material I wish to cover, time constraints (45 minutes) dictate \+
that I cannot devote as much time as I would wish even to sketchy math
ematical details. The interested reader may, however, explore further,
 complete details of all the relevant mathematics at my web site. " }}
{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 94 "In my tal
k, then, I will have to resort to a certain amount of hand-waving alon
g the lines of:" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 15 "" 0 "" 
{TEXT -1 102 "that computation used a method known as modular exponent
iation using the square-and-multiply technique" }}{PARA 15 "" 0 "" 
{TEXT -1 45 "that computation used the Euclidean algorithm" }}{PARA 
15 "" 0 "" {TEXT -1 26 "that computation used the " }{TEXT 593 8 "exte
nded" }{TEXT -1 20 " Euclidean algorithm" }}{PARA 15 "" 0 "" {TEXT -1 
49 "what made that 'work' was Fermat's little theorem" }}{PARA 15 "" 
0 "" {TEXT -1 111 "what made that 'work' was the 2-prime version of Fe
rmat's little theorem (which is itself a special case of the" }{TEXT 
305 1 " " }{TEXT -1 32 "so-called Fermat-Euler theorem)\n" }{TEXT 307 
1 "\n" }{TEXT 594 3 "etc" }{TEXT -1 0 "" }}}{SECT 1 {PARA 3 "" 0 "" 
{TEXT 324 40 "Cryptography, private and public-key. A " }{TEXT 487 7 "
limited" }{TEXT 325 4 " aim" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 
267 "" 0 "" {TEXT -1 215 "Everyone has some rough idea that 'cryptogra
phy' is about disguising (encrypting) and recovering (decrypting) secr
et comminucation. It is used by governments, the military, big busines
s, drugs barons, citizens, ... " }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}
{PARA 0 "" 0 "" {TEXT -1 71 "(*The* outstanding general history refere
nce is David Kahn's 1181 page " }{TEXT 513 16 "The Codebreakers" }
{TEXT -1 102 " (The Comprehensive History of Secret Communication from
 Ancient Times to the Internet), published by " }{TEXT 514 0 "" }
{TEXT 515 8 "SCRIBNER" }{TEXT 516 0 "" }{TEXT -1 26 ", 1996 (2nd. new \+
edition) " }{TEXT 306 1 " " }{TEXT 517 42 "ISBN 0-684-83130-9. The exc
ellent journal " }{TEXT 528 11 "Cryptologia" }{TEXT 529 77 " - produce
d by the US Military Academy - treats the history of cryptography.)" }
}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 95 "A comple
tely trivial - but nevertheless instructive - example to bear in mind \+
is the so-called " }{TEXT 522 13 "Caesar method" }{TEXT -1 206 " (evid
ently used by Julius Caesar): replace the intended text with a disguis
ed text where every letter has been shifted 3 places cyclically in the
 alphabet. One receipt of the encrypted message one recovers" }{TEXT 
311 1 " " }{TEXT -1 62 "the original message by shifting backwards by \+
3 letters. Thus " }{TEXT 518 6 "zebra " }{TEXT -1 8 "encrypts" }{TEXT 
519 1 " " }{TEXT -1 2 "to" }{TEXT 521 7 " cheud " }{TEXT -1 11 "decryp
ts to" }{TEXT 520 6 " zebra" }{TEXT -1 1 "." }}{PARA 0 "" 0 "" {TEXT 
-1 0 "" }}{PARA 0 "" 0 "" {TEXT 524 0 "" }{TEXT -1 62 "Before 1977 one
 needed to keep the encryption method secret ('" }{TEXT 523 7 "private
" }{TEXT -1 13 "'!) otherwise" }{TEXT 312 1 " " }{TEXT -1 97 "an 'enem
y' who intercepted/eavesdropped the encrypted message could recover th
e original message." }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "
" {TEXT -1 17 "Then, in 1977, a " }{TEXT 525 10 "revolution" }{TEXT 
-1 14 " occured: the " }{TEXT 526 16 "theoretical idea" }{TEXT -1 142 
" of public-key cryptography - proposed by Diffie and Hellman in 1976 \+
(in a nutshell they asked for an encryption method of such a nature th
at " }{TEXT 532 16 "even if one knew" }{TEXT -1 37 " how the message h
ad been encrypted, " }{TEXT 533 22 "one could not decrypt " }{TEXT -1 
57 "the intercepted message in a reasonable time: many years)" }{TEXT 
313 3 " - " }{TEXT -1 9 "became a " }{TEXT 527 7 "reality" }{TEXT -1 
62 " within one year, with the work of Rivest, Shamir and Adelman." }
{TEXT 314 2 "\n\n" }{TEXT -1 71 "I quote from David Kahn's PREFACE [19
96] TO THE REVISED EDITION of his " }{TEXT 530 16 "The Codebreakers" }
{TEXT -1 3 ":  " }{TEXT 531 252 "\"The need to revise this book existe
d even before it was published on September 27, 1967. I had written wh
at I hoped would be the definitive history of the subject. I did not k
now at the time of such great matters as the Polish-British-American m
astery" }{TEXT 316 1 " " }{TEXT 318 194 "of the German Enigma cipher m
achine, which had such great effects on World Was II... Nor did I - or
 anyone else - know of things that had not yet been invented, such as \+
public-key cryptography.\"" }{TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 
0 "" }}{PARA 0 "" 0 "" {TEXT -1 2 "A " }{TEXT 535 8 "painting" }{TEXT 
-1 365 " image that I use: Alice and Bob wish to communicate, and do s
o by using a paint and its related paint remover. Alice writes her mes
sage on a sheet, paints it over (encrypts), sends the painted sheet to
 Bob, who then removes the disguising paint using a coat of paint remo
ver, and reads the underlying message. Clasically, Alice and Bob neede
d to keep their paints " }{TEXT 572 6 "secret" }{TEXT -1 94 " (this is
 the essence of private-key cryptography), in the sense that some ill-
minded chemist " }{TEXT 537 5 "could" }{TEXT -1 71 " manufacture the s
econd of the paints if s/he had access to the other.\n" }{TEXT 534 1 "
\n" }{TEXT -1 168 "In terms of that simple image, what Diffie-Hellman \+
were asking for in 1976 - in terms of Alice and Bob - was this: could \+
one create (and vary from time-to-time) paints " }{TEXT 542 11 "public
Alice" }{TEXT -1 35 " ('public' in the sense that Alice " }{TEXT 558 
7 "doesn't" }{TEXT -1 1 " " }{TEXT 556 4 "care" }{TEXT -1 27 " who has
 access to it) and " }{TEXT 544 12 "privateAlice" }{TEXT -1 97 " ('pri
vate' in the sense that only Alice has access to it; more below) with \+
these two properties:" }{TEXT 536 2 "\n\n" }{TEXT -1 26 "1. A surface \+
painted with " }{TEXT 553 12 "privateAlice" }{TEXT -1 77 " (disguising
 the surface), and subsequently painted over with paint removing " }
{TEXT 555 11 "publicAlice" }{TEXT 546 0 "" }{TEXT -1 87 ", restores th
e original surface (and vice-versa, although I will not pursue that he
re)." }{TEXT 541 1 "\n" }{TEXT 538 1 "\n" }{TEXT 549 25 "2. No ill-min
ded chemist " }{TEXT -1 4 "can " }{TEXT 552 13 "realistically" }{TEXT 
-1 38 " (meaning: in years, say) manufacture " }{TEXT 539 13 "privateA
lice1" }{TEXT -1 6 " from " }{TEXT 540 12 "publicAlice." }{TEXT 559 1 
"\n" }{TEXT 543 1 "\n" }{TEXT 545 44 "Note that in this simplified pic
ture I have " }{TEXT 560 7 "ignored" }{TEXT 561 143 " the possibility \+
that an ill-minded interceptor could also read Alice's message if s/he
 had access to Alice's public paint; I am concentrating " }{TEXT 595 
6 "solely" }{TEXT 596 147 " on the verification that Alice is/was the \+
author of the her message (in the 'real world' this requires the use o
f 'certification authorities'...)\n" }{TEXT 547 1 "\n" }{TEXT -1 253 "
In my 1998 Clinton-Ahern public lecture - with more time on hand - I i
llustrated how two parties may securely comminucate with each other us
ing public-key cryptography. 'Securely' meaning that Alice and Bob may
 communicate with each other, knowing with " }{TEXT 567 9 "certainty" 
}{TEXT -1 11 " that they " }{TEXT 565 3 "are" }{TEXT -1 123 " each oth
er, and that no ill-intentioned eaves-dropper may determine the conten
t of their messages in a reasonable time... " }}{PARA 0 "" 0 "" {TEXT 
-1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 115 "Here my more modest aim is to \+
illustrate how one party (Alice) may comminucate with another (Bob), s
o that Bob may " }{TEXT 568 12 "feel certain" }{TEXT -1 27 " that the \+
received message " }{TEXT 570 15 "really has come" }{TEXT -1 27 " from
 Alice (she using her " }{TEXT 562 17 "digital signature" }{TEXT -1 3 
"). " }{TEXT 548 2 "\n\n" }{TEXT -1 324 "(I leave it to you to ponder \+
how Alice and Bob may securely communicate with each other so that bot
h may know with certainty that each is the other, and no ill-intention
ed eaves-dropper may determine the content of their messages in a reas
onable time... You will find the details in my original, longer Clinto
n-Ahern talk.) " }}}{SECT 1 {PARA 3 "" 0 "" {TEXT 411 44 "Converting t
ext to number and number to text" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}
{PARA 0 "" 0 "" {TEXT -1 27 "Doing cryptography, we will" }}{PARA 0 "
" 0 "" {TEXT -1 0 "" }}{PARA 15 "" 0 "" {TEXT -1 66 "convert text into
 numerical form according to an agreed convention" }}{PARA 15 "" 0 "" 
{TEXT -1 39 "disguise (encrypt) the resulting number" }}{PARA 15 "" 0 
"" {TEXT -1 49 "the recipient will recover (decrypt) the original" }
{TEXT 280 1 " " }{TEXT -1 6 "number" }}{PARA 15 "" 0 "" {TEXT -1 29 "c
onvert that number into the " }{TEXT 285 8 "original" }{TEXT -1 5 " te
xt" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 266 "" 0 "" {TEXT 277 0 "
" }{TEXT 275 12 "A convention" }{TEXT -1 13 " re ordering " }{TEXT 
274 28 "alphabetic and other symbols" }{TEXT 278 1 " " }{TEXT -1 34 "(
'a' followed by 'b', 'b' by 'c', " }{TEXT 276 4 "etc." }{TEXT -1 2 "):
" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }{TEXT -1 0 "" }
{MPLTEXT 1 0 151 "`crypt/alphabet` := \n   `abcdefghijklmnopqrstuvwxyz
`\n   ||`ABCDEFGHIJKLMNOPQRSTUVWXYZ`\n   ||```1234567890-=~!@#$\243%^&
*()_+`\n   ||` ,./<>?;':\"[]\{\}|    `:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 0 "" }{TEXT 265 
100 "This procedure converts a string of text into a number ('a' will \+
be 01, 'b' will be 02, etc; finally" }{TEXT 281 1 " " }{TEXT 282 18 "`
 | ` will be 95):" }{TEXT -1 0 "" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 250 "to_number := proc(st, string) \nlocal ll, nn, ss, ii
;  \nll := length(st);\nif ll = 0 then RETURN(0) fi; \nnn := 1;\nfor i
i to ll do \nss := SearchText(substring(st, ii .. ii),\n              \+
   `crypt/alphabet`);\nnn := 100*nn + ss \nod;\nnn - 10^(2*ll) \nend:
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 
0 "" {TEXT -1 0 "" }{TEXT 266 0 "" }{TEXT 267 9 "Example (" }{TEXT 
269 4 "Note" }{TEXT 270 29 " to anyone trying this: text " }{TEXT 279 
4 "must" }{TEXT 272 19 " be included within" }{TEXT 283 1 " " }{TEXT 
268 15 "backward quotes" }{TEXT 273 11 ", ` and `)." }{TEXT -1 0 "" }}
}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 60 "to_number(`Chicago, Chicago
, ... my hometown`);  # Example 1" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 58 "to_number(`Pythagoras' theorem concerns x^2 + y^2 = z
^2`);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 54 "to_number(`Fermat'
s 'little' theorem states that...`);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 36 "Even junk tex
t has a numerical form:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "
to_number(`uu67&[[[...]]^%$\243hello90ikh`);" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 17 "to_number(HELLO);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 271 45 "This recover
s a string of text from a number:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 272 "from_number := proc(nn, integer) \nlocal ss, mm, ll,
 pp, ii, ans; mm := nn;\nll := floor(1/2*trunc(evalf(log10(mm))))+1;\n
ans := ``; for ii to ll do mm := mm/100;\npp := 100*frac(mm);\nss := s
ubstring(`crypt/alphabet`, pp..pp);\nans := cat(ss, ans); mm := trunc(
mm)\nod; ans end:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "from_n
umber(0102030405);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "from_
number(102030405);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 94 "from_
number(320518130120881980881209202012058880200805151805138019200120051
98020080120828282);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 60 "No alphabetic element corresponds \+
to 96, 97, 98, 99, nor 00:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
16 "from_number(96);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "fro
m_number(00);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 34 "Notice the three colosely related:
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 44 "from_number(33390234313
8384177847687242526);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 63 "fr
om_number(33390234313838417784768724252698); # that 98 at end" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 67 "from_number(3339023400313838
417784768724252698); # that internal 00" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }{XPPMATH 20 "6#%\"~G" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT -1 43 "I can't resist insering this final example:" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 422 "from_number(3580081516058035800801
2205802009130580201580220919092080290809030107158819802934313145312927
3731803227294641445182802703031518040914078020158013258002151511818090
4015200809140780230912128016180516011805802515218006151880200809198018
0519200121180114208819800315130903640215151180040503151880151880828282
8027140480200805148020080518058009198020080580030805051905030111058180
011212805763802201180905200905198290);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{PARA 0 "" 0 "" {TEXT -1 1 " " }}{PARA 0 "" 0 "" 
{TEXT -1 55 "It's time to do some cryptography, private and public. " 
}}}{SECT 1 {PARA 3 "" 0 "" {TEXT 550 15 "Pohlig-Hellman " }{TEXT 327 
7 "private" }{TEXT 551 28 "-key. Rivest-Shamir-Adelman " }{TEXT 328 
11 "public-key." }}{PARA 0 "" 0 "" {TEXT -1 0 "" }{TEXT 329 1 "\n" }
{TEXT -1 18 "For PH one needs:\n" }}{PARA 0 "" 0 "" {TEXT -1 19 "1. a \+
'large' prime " }{TEXT 331 1 "p" }{TEXT 330 2 "\n\n" }{TEXT -1 15 "2. \+
An integer '" }{TEXT 333 1 "e" }{TEXT -1 39 "' (the encryption power) \+
such that gcd(" }{TEXT 733 1 "e" }{TEXT 734 2 ", " }{XPPEDIT 18 0 "p-1
;" "6#,&%\"pG\"\"\"F%!\"\"" }{TEXT -1 6 ") = 1." }{TEXT 334 1 " " }
{TEXT -1 17 "\n\n3. An integer '" }{TEXT 335 1 "d" }{TEXT -1 35 "' (th
e decryption power) such that " }{TEXT 337 2 "ed" }{TEXT -1 19 " leave
s remainder 1" }{TEXT 336 1 " " }{TEXT -1 14 "on division by" }{TEXT 
347 1 " " }{TEXT -1 1 "(" }{XPPEDIT 18 0 "p-1;" "6#,&%\"pG\"\"\"F%!\"
\"" }{TEXT -1 2 ")." }{TEXT 348 2 "\n\n" }{TEXT -1 8 "In PH, (" }
{TEXT 647 1 "e" }{TEXT -1 2 ", " }{TEXT 648 1 "p" }{TEXT -1 0 "" }
{TEXT 649 0 "" }{TEXT -1 7 ") and (" }{TEXT 650 1 "d" }{TEXT -1 2 ", \+
" }{TEXT 651 1 "p" }{TEXT -1 17 ") constitute the " }{TEXT 652 6 "shar
ed" }{TEXT -1 129 " 'private-keys' (anyone who knows one of those keys
 may quickly calculate the other one, using the extended Euclidean alg
orithm)." }}{PARA 262 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT 
-1 0 "" }{TEXT 340 18 "Brief comments. \n\n" }{TEXT -1 13 "For a given
 '" }{TEXT 341 1 "p" }{TEXT -1 6 "' and " }{TEXT 342 2 "'e" }{TEXT -1 
26 "' there is ONLY ONE such '" }{TEXT 344 1 "d" }{TEXT -1 17 "' betwe
en 1 and (" }{XPPEDIT 18 0 "p-1;" "6#,&%\"pG\"\"\"F%!\"\"" }{TEXT -1 
2 ")." }{TEXT 338 3 " \n\n" }{TEXT -1 6 "That '" }{TEXT 350 1 "d" }
{TEXT -1 72 "' is quickly found by using the so-called extended Euclid
ean algorithm. " }{TEXT 332 2 "\n\n" }{TEXT -1 68 "Requirement #3 is d
ictated by the mathematics of Fermat's so-called " }{TEXT 351 6 "littl
e" }{TEXT -1 49 " theorem (that's what I mean by hand waving...). " }
{TEXT 339 2 "\n\n" }{TEXT -1 59 "Without requirement #2, #3 could not \+
even come into play..." }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 
0 "" {TEXT -1 19 "For RSA one needs:\n" }}{PARA 0 "" 0 "" {TEXT -1 22 
"1. Two 'large' primes " }{TEXT 354 1 "p" }{TEXT -1 5 " and " }{TEXT 
377 2 "q " }{TEXT -1 8 "(in the " }{TEXT 379 10 "real world" }{TEXT 
-1 88 ", 'large' is not good enough, as I will demonstrate in a later \+
section),      and then '" }{TEXT 716 1 "n" }{TEXT -1 32 "' - Alice's \+
public modulus - is " }{TEXT 717 7 "defined" }{TEXT -1 4 " by " }
{TEXT 718 6 "n = pq" }{TEXT -1 2 ". " }{TEXT 375 2 "\n\n" }{TEXT -1 
15 "2. An integer '" }{TEXT 356 1 "e" }{TEXT -1 7 "' (the " }{TEXT 
597 1 "e" }{TEXT -1 31 "ncryption power) such that gcd(" }{TEXT 731 1 
"e" }{TEXT 732 2 ", " }{XPPEDIT 18 0 "(p-1)*(q-1);" "6#*&,&%\"pG\"\"\"
F&!\"\"F&,&%\"qGF&F&F'F&" }{TEXT -1 7 ") = 1. " }{TEXT 343 5 "\n    " 
}{TEXT -1 6 "That '" }{XPPEDIT 18 0 "(p-1)*(q-1);" "6#*&,&%\"pG\"\"\"F
&!\"\"F&,&%\"qGF&F&F'F&" }{TEXT -1 6 "' is '" }{XPPEDIT 18 0 "phi(n);
" "6#-%$phiG6#%\"nG" }{TEXT -1 25 "', the so called (Euler) " }{TEXT 
729 14 "phi-value of n" }{TEXT -1 10 ", plays a " }{TEXT 730 11 "funda
mental" }{TEXT -1 8 " role..." }}{PARA 0 "" 0 "" {TEXT -1 16 "\n3. An \+
integer '" }{TEXT 358 1 "d" }{TEXT -1 7 "' (the " }{TEXT 599 1 "d" }
{TEXT -1 27 "ecryption power) such that " }{TEXT 360 2 "ed" }{TEXT -1 
35 " leaves remainder 1 on division by " }{XPPEDIT 18 0 "(p-1)*(q-1);
" "6#*&,&%\"pG\"\"\"F&!\"\"F&,&%\"qGF&F&F'F&" }{TEXT -1 1 "." }{TEXT 
345 2 "\n\n" }{TEXT -1 9 "In RSA, (" }{TEXT 653 1 "e" }{TEXT -1 2 ", \+
" }{TEXT 654 1 "n" }{TEXT -1 0 "" }{TEXT 655 0 "" }{TEXT -1 9 ") is th
e " }{TEXT 658 6 "public" }{TEXT -1 13 "-key, while (" }{TEXT 656 1 "d
" }{TEXT -1 2 ", " }{TEXT 657 1 "n" }{TEXT -1 9 ") is the " }{TEXT 
659 7 "private" }{TEXT -1 19 "-key (and here the " }{TEXT 660 13 "abso
lute crux" }{TEXT -1 158 " of the matter, the entire rock on which the
 whole system stands, is that someone who knows the public-key may NOT
 quickly quickly calculate the private one, " }{TEXT 662 9 "providing
" }{TEXT -1 24 " the constructor of the " }{TEXT 663 14 "public modulu
s" }{TEXT -1 3 ", '" }{TEXT 661 1 "n" }{TEXT -1 20 "', has done so wit
h " }{TEXT 665 3 "due" }{TEXT -1 1 " " }{TEXT 664 7 "caution" }{TEXT 
-1 42 " (e.g., it is NOT enough merely to choose " }{TEXT 666 1 "p" }
{TEXT -1 5 " and " }{TEXT 667 1 "q" }{TEXT -1 44 " to be 'large', as I
 will later demonstrate)" }}{PARA 262 "" 0 "" {TEXT -1 0 "" }}{PARA 0 
"" 0 "" {TEXT -1 0 "" }{TEXT 362 18 "Brief comments. \n\n" }{TEXT -1 
13 "For a given '" }{TEXT 363 1 "p" }{TEXT -1 4 "', '" }{TEXT 382 1 "q
" }{TEXT -1 7 "', and " }{TEXT 365 2 "'e" }{TEXT -1 26 "' there is ONL
Y ONE such '" }{TEXT 367 1 "d" }{TEXT -1 15 "' between 1 and" }{TEXT 
346 1 " " }{XPPEDIT 18 0 "(p-1)*(q-1)" "6#*&,&%\"pG\"\"\"F&!\"\"F&,&%
\"qGF&F&F'F&" }{TEXT -1 1 "." }{TEXT 349 3 " \n\n" }{TEXT -1 6 "That '
" }{TEXT 371 1 "d" }{TEXT -1 21 "' is quickly found - " }{TEXT 603 7 "
knowing" }{TEXT -1 1 " " }{TEXT 383 1 "p" }{TEXT -1 5 " and " }{TEXT 
384 1 "q" }{TEXT -1 8 " (that '" }{TEXT 605 7 "knowing" }{TEXT -1 7 "'
 is a " }{TEXT 601 11 "fundamental" }{TEXT -1 19 " point, and is the \+
" }{TEXT 607 12 "entire basis" }{TEXT -1 102 " for the security of the
 public-key method...) - by using the so-called extended Euclidean alg
orithm. " }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 
100 "Requirement #3 is dictated by the mathematics of 2-prime case of \+
Euler's generalization of Fermat's " }{TEXT 373 6 "little" }{TEXT -1 
32 " theorem (more hand waving...).\n" }}{PARA 0 "" 0 "" {TEXT -1 66 "
Again, without requirement #2, #3 could not even come into play..." }}
}{SECT 1 {PARA 3 "" 0 "" {TEXT 554 5 "A PH " }{TEXT 287 7 "private" }
{TEXT 557 18 "-key demonstration" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}
{PARA 0 "" 0 "" {TEXT -1 44 "Suppose 'Alice' wishes to send the messag
e '" }{TEXT 386 18 "Hi Bob, let's meet" }{TEXT -1 44 "' to 'Bob' using
 P-H. This is what they do: " }{TEXT 326 1 " " }}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 41 "p := nextprime(10^70 + rand());  # step 1" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "e := nextprime(10^15);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 39 "igcd(e, p-1);  # testing tha
t '2' holds" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 66 "igcdex(e, p-
1, 'x', 'y'):\nd := x mod (p-1);  # Step 3, finding 'd'" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 32 "Here - just to let you see - is " }{TEXT 609 2 "ed" }{TEXT -1 
1 ":" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 4 "e*d;" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 13 "And see that " }{TEXT 409 2 "ed" }{TEXT -1 38 " does leave rema
inder 1 on division by" }{TEXT 352 1 " " }{TEXT -1 1 "(" }{XPPEDIT 18 
0 "p-1;" "6#,&%\"pG\"\"\"F%!\"\"" }{TEXT -1 2 "):" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 14 "e*d mod (p-1);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 45 "Next, Alice c
onverts her message to a number:" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 47 "Anum := to_number(`Hi Bob, let's meet. Alice`);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "length(Anum);" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 134 "Alice then encrypts that number (she lays on her coat of paint
, as it were) by calculating the remainder (the least positive one) th
at" }{TEXT 390 1 " " }{XPPEDIT 18 0 "Anum^e;" "6#)%%AnumG%\"eG" }
{TEXT -1 8 "  leaves" }{TEXT 355 1 " " }{TEXT -1 15 "on division by " 
}{TEXT 391 1 "p" }{TEXT -1 33 ". I'll call the resulting number " }
{TEXT 399 5 "Asend" }{TEXT -1 45 ", since it's that number Alice sends
 to Bob. " }{TEXT 392 4 "That" }{TEXT -1 6 " is a " }{TEXT 393 10 "rem
arkable" }{TEXT -1 65 " calculation, as I would like to demonstrate. F
irst see how Maple" }{TEXT 353 1 " " }{TEXT -1 38 "computes powers; I'
ll illustrate with " }{XPPEDIT 18 0 "13^900;" "6#*$\"#8\"$+*" }{TEXT 
-1 24 " (which has 1003 digits;" }{TEXT 357 1 " " }{TEXT -1 33 "in my \+
live presentation I'll vary" }{TEXT 361 1 " " }{TEXT -1 8 "that to " }
{XPPEDIT 18 0 "13^90000;" "6#*$\"#8\"&++*" }{TEXT 668 1 " " }{TEXT -1 
101 "- which has 100,255 digits - but won't leave that output when pla
cing this worksheet on my web site):" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 7 "13^900;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "
" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 41 "But see what happens if we tr
y to compute" }{TEXT 359 1 " " }{XPPEDIT 18 0 "A_num^e;" "6#)%&A_numG%
\"eG" }{TEXT -1 1 ":" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "Anum
^e;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "
" 0 "" {TEXT -1 25 "Hardly a surprise, since " }{XPPEDIT 18 0 "Anum^e;
" "6#)%%AnumG%\"eG" }{TEXT -1 128 " has billions upon billions of digi
ts, and Maple can only compute powers up to a couple of million digits
. It is something of a " }{TEXT 573 13 "minor miracle" }{TEXT -1 29 " \+
that one can quickly compute" }{TEXT 364 1 " " }{TEXT -1 18 "the remai
nder that" }{TEXT 368 1 " " }{XPPEDIT 18 0 "Anum^e" "6#)%%AnumG%\"eG" 
}{TEXT 401 1 " " }{TEXT -1 22 "leaves on division by " }{TEXT 402 1 "p
" }{TEXT -1 2 ", " }{TEXT 575 7 "without" }{TEXT -1 11 " computing " }
{XPPEDIT 18 0 "Anum^e;" "6#)%%AnumG%\"eG" }{TEXT 366 1 " " }{TEXT -1 
38 "itself (the mathematics involved uses " }{TEXT 404 11 "congruences
" }{TEXT -1 1 "," }{TEXT 369 1 " " }{TEXT -1 28 "together with the so-
called " }{TEXT 406 20 "square-and-multiply " }{TEXT -1 7 "method," }
{TEXT 370 1 " " }{TEXT -1 51 "invoked by the '&' in the following Mapl
e command):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "Asend := Anu
m&^e mod p;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT -1 54 "In passing let us observe the text equiva
lent of that " }{TEXT 413 10 "encrypted " }{TEXT -1 139 "number; it is
 just meaningless junk (I may have to recompute with another 'p' shoul
d there be a '00' in that string in the wrong position):" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "from_number(Asend);" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 183 "And this is what Bob does to read Alice's message: he decrypts
 (he strips off the disuising coat of paint, as it were) by calculatin
g the remainder (again the least positive one) that" }{TEXT 417 1 " " 
}{XPPEDIT 18 0 "Asend^d;" "6#)%&AsendG%\"dG" }{TEXT -1 23 " leaves on \+
division by " }{TEXT 415 2 "p." }{TEXT -1 4 " The" }{TEXT 372 1 " " }
{TEXT -1 19 "connection between " }{TEXT 612 1 "e" }{TEXT -1 2 ", " }
{TEXT 614 1 "d" }{TEXT -1 5 ", and" }{TEXT 374 1 " " }{TEXT -1 1 "(" }
{XPPEDIT 18 0 "p-1;" "6#,&%\"pG\"\"\"F%!\"\"" }{TEXT -1 1 ")" }{TEXT 
376 1 " " }{TEXT -1 60 "in requirement #3, together with the mathemati
cs of Fermat's" }{TEXT 380 1 " " }{TEXT 418 6 "little" }{TEXT 419 1 " \+
" }{TEXT -1 12 "theorem (if " }{TEXT 615 1 "p" }{TEXT -1 19 " is any p
rime, and " }{TEXT 616 1 "a" }{TEXT -1 33 " is any integer not divisib
le by " }{TEXT 617 1 "p" }{TEXT -1 6 ", then" }{TEXT 378 1 " " }
{XPPEDIT 18 0 "a^(p-1);" "6#)%\"aG,&%\"pG\"\"\"F'!\"\"" }{TEXT -1 35 "
 leaves remainder 1 on division by " }{TEXT 618 1 "p" }{TEXT -1 3 ") -
" }{TEXT 381 1 " " }{TEXT 619 10 "gaurantees" }{TEXT -1 47 " that the \+
outcome is the numerical form of the " }{TEXT 420 8 "original" }{TEXT 
-1 6 " text:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "Bsee := Ase
nd&^d mod p;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "from_number
(Bsee);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 259 "" 0 "" {TEXT -1 0 "" }{TEXT 422 16 "Wonderful, yes?\n" }
{TEXT -1 65 "(actually it's entirely elementary when you know the math
ematics)" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 
46 "In responding to Alice, Bob may encrypt using " }{TEXT 645 6 "eith
er" }{TEXT -1 162 " power (of course in practice Alice and Bob should \+
agree in advance on this), meaning that he may encrypt using the decry
ption power, as I'll quickly demonstrate:" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 52 "Bnum := to_number(`Thanks Alice. Where? When? Bob`)
;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "length(Bnum);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 43 "Bsend := Bnum&^d mod p; #NOT
E the 'd' power" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 32 "Alice receives B_send, and then:" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 44 "Asee := Bsend&^e mod p; #
 NOTE the 'e' power" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "from
_number(Asee);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 25 "Two final, quick points: " }}
{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 15 "" 0 "" {TEXT -1 83 "SECURITY
.   It should be obvious that both Alice and Bob must keep their 'keys
' - (" }{TEXT 425 1 "e" }{TEXT -1 2 ", " }{TEXT 427 1 "p" }{TEXT -1 7 
") and (" }{TEXT 429 1 "d" }{TEXT -1 2 ", " }{TEXT 431 1 "p" }{TEXT 
-1 23 ") - secret: anyone who " }{TEXT 620 5 "knows" }{TEXT -1 2 " (" 
}{TEXT 433 1 "e" }{TEXT -1 2 ", " }{TEXT 435 1 "p" }{TEXT -1 26 ") may
 immediately compute " }{TEXT 437 2 "d " }{TEXT -1 63 "(using the exte
nded Euclidean algorithm), or anyone who knows (" }{TEXT 438 1 "d" }
{TEXT -1 2 ", " }{TEXT 440 1 "p" }{TEXT -1 26 ") may immediately compu
te " }{TEXT 441 1 "e" }{TEXT -1 1 " " }}{PARA 15 "" 0 "" {TEXT -1 83 "
SIZE OF TEXT.  If the numerical form (Anum or Bnum) of either text is \+
greater than " }{TEXT 443 1 "p" }{TEXT -1 10 ", then it " }{TEXT 646 
4 "must" }{TEXT -1 67 " be broken down into numbers each having numeri
cal value less than " }{TEXT 445 1 "p" }{TEXT -1 33 " (think about tha
t to see why...)" }}}{PARA 0 "" 0 "" {TEXT -1 0 "" }}}{SECT 1 {PARA 3 
"" 0 "" {TEXT 563 7 "An RSA " }{TEXT 288 6 "public" }{TEXT 564 6 "-key
 (" }{TEXT 467 17 "digital signature" }{TEXT 566 15 ") demonstration" 
}}{PARA 0 "" 0 "" {TEXT -1 52 "Here, with time as the enemy, I can onl
y convey the " }{TEXT 672 9 "essential" }{TEXT -1 1 " " }{TEXT 577 6 "
spirit" }{TEXT -1 228 " of the basic RSA idea. \n\nSuppose 'Alice' wis
hes to send a message (\"Hi Bob, let's meet. Alice\") to Bob; then not
 only can she do so - in a manner similar to that you have already see
n in the PH example - but she can give him a " }{TEXT 468 9 "gaurantee
" }{TEXT -1 10 " that she " }{TEXT 673 9 "really is" }{TEXT -1 32 " th
e author of the message (her " }{TEXT 464 17 "digital signature" }
{TEXT -1 26 " comes into play here...)\n" }{TEXT 385 1 "\n" }{TEXT -1 
44 "Important note. Her message to him is NOT a " }{TEXT 669 6 "secure
" }{TEXT -1 67 " one, in the sense that anyone who intercepts her mess
age, and who " }{TEXT 670 5 "knows" }{TEXT -1 5 " her " }{TEXT 671 6 "
public" }{TEXT -1 154 "-key, may then read her message to Bob. Also, a
lthough he can also send her a message (using her public-key) - perhap
s 'Thanks Alice. Where? When? Bob' - " }{TEXT 735 3 "she" }{TEXT -1 
18 " however can have " }{TEXT 737 2 "no" }{TEXT -1 16 " gaurantee tha
t " }{TEXT 736 2 "he" }{TEXT -1 28 " was the author, since some " }
{TEXT 739 8 "impostor" }{TEXT -1 28 " - knowing her public-key - " }
{TEXT 738 5 "could" }{TEXT -1 15 " have sent it. " }{TEXT 387 2 "\n\n
" }{TEXT -1 61 "(In case, as a novice, my reader objects along the lin
es of '" }{TEXT 674 119 "why bother with all of this public and privat
e key stuff, why not just keep the keys secret and save a lot of bothe
r..." }{TEXT -1 221 "', well that brings up a whole host of problems -
 not least the so-called transportation problem (how - in a crisis - c
an one securely deliver secret keys over a distance?) which I could no
t even begin to discuss here...)" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}
{PARA 0 "" 0 "" {TEXT -1 78 "First of all Alice chooses two 'large' pr
imes (throwing caution to the winds):" }}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 43 "pA := nextprime(10^60 + 1234567*rand()^5); " }{TEXT 
-1 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 45 "qA := nextprime(1
0^65 + 8765439999*rand()^5);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 25 "forms their product (her
 " }{TEXT 675 6 "public" }{TEXT -1 47 " modulus, which she will use wi
th her private '" }{TEXT 676 1 "d" }{TEXT -1 28 "', constructed in a m
oment):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "nA := pA*qA;\n" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "
" {TEXT -1 46 "computes the 'Euler phi-value' of the integer " }{TEXT 
471 2 "nA" }{TEXT -1 55 " (that integer plays the same role in the RSA
 method as" }{TEXT 388 1 " " }{TEXT -1 1 "(" }{XPPEDIT 18 0 "p-1;" "6#
,&%\"pG\"\"\"F%!\"\"" }{TEXT -1 1 ")" }{TEXT 389 1 " " }{TEXT -1 52 "d
id in the PH case, and I ask my reader to note the " }{TEXT 681 18 "ap
parently trivial" }{TEXT -1 38 " remark that its calculation requires \+
" }{TEXT 680 7 "knowing" }{TEXT -1 2 " '" }{TEXT 677 2 "pA" }{TEXT -1 
7 "' and '" }{TEXT 679 2 "qA" }{TEXT -1 1 "'" }{TEXT 678 0 "" }{TEXT 
-1 2 "):" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 28 "phi_nA := (pA -
 1)*(qA - 1);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 39 "Next Alice chooses an encryption p
ower:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 35 "eA := nextprime(10
^25 + rand()^2); " }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 40 "Let's check if that the requiremen
t gcd(" }{TEXT 394 2 "eA" }{TEXT -1 3 ", (" }{XPPEDIT 18 0 "pA-1;" "6#
,&%#pAG\"\"\"F%!\"\"" }{TEXT -1 2 ")(" }{XPPEDIT 18 0 "qA-1;" "6#,&%#q
AG\"\"\"F%!\"\"" }{TEXT -1 108 ")) = 1 holds (there is only a very rem
ote possibility that it doesn't, and I leave it to you to think about \+
" }{TEXT 621 3 "why" }{TEXT -1 10 " that is):" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 17 "igcd(eA, phi_nA);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 17 "and computes \+
her " }{TEXT 682 7 "private" }{TEXT -1 18 "-decryption power " }{TEXT 
477 3 "dA:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 76 "igcdex(eA, ph
i_nA, 'xA', 'yA'):\ndA := xA mod phi_nA;  # Step 3, finding 'dA'" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT -1 35 "See in passing that the product of " }{TEXT 449 2 "eA" }
{TEXT -1 5 " and " }{TEXT 450 2 "dA" }{TEXT -1 38 " does leave remaind
er 1 on division by" }{TEXT 395 1 " " }{TEXT -1 1 "(" }{XPPEDIT 18 0 "
pA-1;" "6#,&%#pAG\"\"\"F%!\"\"" }{TEXT -1 2 ")(" }{XPPEDIT 18 0 "qA-1;
" "6#,&%#qAG\"\"\"F%!\"\"" }{TEXT -1 2 "):" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 28 "eA*dA mod (pA - 1)*(qA - 1);" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 8 "Alice's
 " }{TEXT 479 6 "public" }{TEXT -1 5 " and " }{TEXT 481 7 "private" }
{TEXT -1 16 " keys are then (" }{TEXT 397 2 "eA" }{TEXT -1 2 ", " }
{TEXT 398 2 "nA" }{TEXT -1 7 ") and (" }{TEXT 400 2 "dA" }{TEXT -1 2 "
, " }{TEXT 403 2 "nA" }{TEXT -1 1 ")" }{TEXT 396 1 " " }{TEXT -1 52 "(
in the 'real world', a 'Certification Authority' is" }{TEXT 410 1 " " 
}{TEXT -1 20 "the guarantor that (" }{TEXT 405 2 "eA" }{TEXT -1 2 ", \+
" }{TEXT 407 2 "nA" }{TEXT -1 5 ") is " }{TEXT 579 3 "her" }{TEXT -1 
15 " 'public-key')." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 45 "Next, Alice converts her message t
o a number:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 47 "ANUM := to_n
umber(`Hi Bob, let's meet. Alice`);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 46 "Alice then en
crypts ANUM by using her private " }{TEXT 581 10 "decryption" }{TEXT 
-1 8 " power (" }{TEXT 622 4 "that" }{TEXT -1 8 " is her " }{TEXT 623 
17 "digital signature" }{TEXT -1 2 "):" }{TEXT 408 1 "\n" }}{PARA 15 "
" 0 "" {TEXT -1 26 "She computes the remainder" }{TEXT 412 1 " " }
{XPPEDIT 18 0 "ANUM^dA;" "6#)%%ANUMG%#dAG" }{TEXT -1 23 " leaves on di
vision by " }{TEXT 624 1 "n" }{TEXT 625 1 "\n" }}{PARA 262 "" 0 "" 
{TEXT 448 31 "I'll call the resulting number " }{TEXT 446 5 "ASEND" }
{TEXT 447 44 ", since it's that number Alice sends to Bob." }{TEXT -1 
0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "ASEND := ANUM&^dA mo
d nA;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 
0 "" 0 "" {TEXT -1 43 "Let us observe the text equivalent of that " }
{TEXT 453 10 "encrypted " }{TEXT -1 71 "number is just meaningless jun
k; I may have to recompute with another '" }{TEXT 626 1 "n" }{TEXT -1 
63 "' should there be a '00' in that string in the wrong position):" }
}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "from_number(ASEND);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT -1 98 "Bob then reads Alice's message by (removing the disuising
 coat of paint as it were, using Alice's " }{TEXT 628 6 "public" }
{TEXT -1 8 " paint):" }}{PARA 15 "" 0 "" {TEXT -1 28 "Computing the re
mainder that" }{TEXT 414 1 " " }{XPPEDIT 18 0 "ASEND^eA;" "6#)%&ASENDG
%#eAG" }{TEXT -1 23 " leaves on division by " }{TEXT 627 1 "n" }}
{PARA 262 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 49 "The mat
hematics of two-prime version of Fermat's " }{TEXT 456 6 "little" }
{TEXT -1 66 " theorem gaurantees that the outcome is the numerical for
m of the " }{TEXT 458 8 "original" }{TEXT -1 6 " text:" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 25 "BSEE := ASEND&^eA mod nA;" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "from_number(BSEE);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" 
{TEXT -1 0 "" }{TEXT 460 40 "Two quick points, of which the first is \+
" }{TEXT 587 11 "fundamental" }{TEXT 588 2 ": " }}{PARA 0 "" 0 "" 
{TEXT -1 0 "" }}{PARA 15 "" 0 "" {TEXT -1 113 "SECURITY.   Unlike the \+
PH, private-key method, where the keys had to be kept secret, here Ali
ce's private-key is " }{TEXT 630 4 "safe" }{TEXT -1 5 " and " }{TEXT 
631 6 "secure" }{TEXT -1 2 ", " }{TEXT 632 11 "even though" }{TEXT -1 
76 " her other key is allowed to be in the public domain. (The big que
stion is: " }{TEXT 629 7 "WHY?..." }{TEXT -1 37 " One might naively th
ink as follows: " }{TEXT 635 7 "knowing" }{TEXT -1 2 " '" }{TEXT 633 
1 "n" }{TEXT -1 7 "' and '" }{TEXT 634 1 "e" }{TEXT -1 54 "', surely o
ne could impersonate Alice by calculating '" }{TEXT 637 1 "d" }{TEXT 
-1 20 "' through factoring " }{TEXT 639 1 "n" }{TEXT -1 0 "" }{TEXT 
640 0 "" }{TEXT -1 13 ", thus know '" }{TEXT 641 1 "p" }{TEXT -1 7 "' \+
and '" }{TEXT 642 1 "q" }{TEXT -1 19 "', and so compute '" }{TEXT 643 
1 "d" }{TEXT -1 65 "' from requirement #3 (as in the PH case). Ah!! Th
ere's the rub:\n" }{TEXT 416 38 "\n                                   \+
  " }{TEXT 644 35 "FACTORING - IN GENERAL - IS HARD!!!" }{TEXT 638 1 "
)" }{TEXT 636 1 "\n" }}{PARA 15 "" 0 "" {TEXT -1 92 "SIZE OF TEXT.  He
re - as in the PH case - if the numerical form of the text is greater \+
than " }{TEXT 585 1 "n" }{TEXT -1 82 ", then it must be broken down in
to sections each having numerical value less than " }{TEXT 463 1 "n" }
{TEXT -1 26 " (for a similar reason...)" }}}{PARA 0 "" 0 "" {TEXT -1 
0 "" }}}{SECT 1 {PARA 3 "" 0 "" {TEXT 569 13 "The unsolved " }{TEXT 
483 4 "fast" }{TEXT 571 43 " factorization problem. RSA129 illustratio
n" }}{PARA 3 "" 0 "" {TEXT 683 215 "The problem of being able to perfo
rm certain calculations quickly is an enormous topic in Number Theory \+
(a proper discussion of what 'quickly' means involves setting down pre
cise definitions of concepts like, e.g., " }{TEXT 684 15 "polynomial t
ime" }{TEXT 685 67 "...) Here I will only remark that while, as you ha
ve actually seen:" }}{PARA 15 "" 0 "" {TEXT -1 47 "modular exponentiat
ion (computing the remainder" }{TEXT 421 1 " " }{XPPEDIT 18 0 "a^b;" "
6#)%\"aG%\"bG" }{TEXT -1 23 " leaves on division by " }{TEXT 686 1 "m
" }{TEXT -1 1 ")" }}{PARA 15 "" 0 "" {TEXT -1 82 "the Euclidean algori
thm (to compute greatest common divisor) and its extended form" }}
{PARA 260 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 149 "may bo
th be performed 'quickly' (indeed breath-takingly so; the Euclidean al
gorithm is considered one of the ten greatest algorithms in Mathematic
s)," }{TEXT 423 5 " BUT " }{TEXT -1 0 "" }{TEXT 687 14 "factoring (in \+
" }{TEXT 688 7 "general" }{TEXT 689 2 ") " }{TEXT -1 109 "is currently
 a totally unknown barrier... There are individual factorization metho
ds, each of which enjoys a " }{TEXT 690 24 "certain limited success " 
}{TEXT -1 222 "when applied to some numbers, but no single one that wo
rks quickly on any given candidate. \nHere all that I can expect to do
 is to give you a flavour of what I mean, and to do so I will use a fa
mous number known as RSA129:" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
140 "RSA129 := 1143816257578888676692357799761466120102182967212423625
6256184293570693524573389783059712356395870505898907514759929002687954
3541;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 15 "length(RSA129);" }
}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 266 "" 0 
"" {TEXT -1 104 "It first came to public attention in Martin Gardiner'
s much read column in the August 1997 issue of the " }{TEXT 490 19 "Sc
ientific American" }{TEXT -1 472 ". Rivest, Shamir and Adleman threw t
his number out as a challenge to be factored. Given the then state of \+
mathematical knowledge (as far as factoring was concerned) and compute
r power, they estimated that it would take some 20,000 years to factor
 it, and thereby decrypt a message which used their specially construc
ted RSA129 as public modulus. \nBriefly, a method known as the 'Quadra
tic Sieve' - introduced in 1981 by the US mathematician Carl Pomerance
 - together with " }{TEXT 691 9 "thousands" }{TEXT -1 174 " of compute
rs worldwide (organised by the Dutch mathematician Arjen Lenstra) - fa
ctored it by April 1994, and decrypted the RSA-encrypted message (whic
h, incidentally, was: \"" }{TEXT 491 40 "The magic words are squeamish
 ossifrage." }{TEXT -1 71 "\") \nLenstra, and his co-workers found the
 two primes whose product was " }{TEXT 492 6 "RSA129" }{TEXT -1 49 " t
o be the following 64-digit f1 and 65-digit f2:" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 71 "f1 := 3490529510847650949147849619903898133417
764638493387843990820577;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
11 "length(f1);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 72 "f2 := 32
769132993266709549961988190834461413177642967992942539798288533;" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 11 "length(f2);" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 6 "f1*f2;" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 7 "RSA129;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "
" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 156 "Now, Maple has a command 'if
actor' (which, by default, uses the 1970's Brillhart-Morrison continue
d fraction method...). Here are some examples of its use: " }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 19 "ifactor(987654321);" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 27 "ifactor(13121110987654321);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "ifactor(41703118764796734960
601837);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT -1 95 "But if I were to foolishly execute the co
mmand (which I have neutralized with the initial '#'):" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "# ifactor(RSA129);" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT 
-1 114 "the timer would stay on for MANY, MANY years ... (RSA129 does \+
not fall quickly to the Brillhart-Morrison method). " }{TEXT 493 51 "
\n\nQuestion.  So, it it just a matter of mere size? " }{TEXT -1 0 "" 
}{TEXT 494 26 "\nAnswer. No; size is only " }{TEXT 495 4 "part" }
{TEXT 692 62 " of the problem, and to illustrate that I will create a \+
number" }{TEXT -1 62 " - which I will call by the name 'beyondRSA129' \+
- as follows:\n" }}{PARA 15 "" 0 "" {TEXT -1 38 "it will be - like RSA
129 itself - the " }{TEXT 496 7 "product" }{TEXT -1 14 " of two primes
" }{TEXT 424 1 " " }{TEXT -1 11 "'P' and 'Q'" }}{PARA 15 "" 0 "" 
{TEXT -1 1 "I" }{TEXT 693 1 " " }{TEXT -1 78 "will choose P to be f2 (
the greater of the two primes whose product is RSA129)" }}{PARA 15 "" 
0 "" {TEXT -1 22 "I will choose Q to be " }{TEXT 694 8 "not much" }
{TEXT -1 84 " greater than P (in fact I will choose it to be the very \+
next prime after P itself)\n" }{TEXT 695 0 "" }}{PARA 0 "" 0 "" {TEXT 
-1 88 "Those choices automatically make 'beyondRSA129' be greater than
 RSA129 (hence the name)." }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 
"P := f2;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "Q := nextprime
(P);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 20 "beyondRSA129 := P*Q
;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "length(beyondRSA129);
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 
0 "" {TEXT -1 186 "That 130-digit number can be quickly factored by us
ing an almost trivial method due to Fermat, and the idea behind it is \+
simply this: 91 may be factored by trial-and-error by noting that" }
{TEXT 426 1 "\n" }}{PARA 15 "" 0 "" {TEXT -1 19 "91 is not a perfect" 
}{TEXT 428 1 " " }{TEXT -1 7 "square " }}{PARA 15 "" 0 "" {TEXT -1 6 "
nor is" }{TEXT 430 1 " " }{XPPEDIT 18 0 "91+1^2;" "6#,&\"#\"*\"\"\"*$F
%\"\"#F%" }{TEXT -1 12 ", namely 92 " }}{PARA 15 "" 0 "" {TEXT -1 7 "n
or is " }{XPPEDIT 18 0 "91+2^2;" "6#,&\"#\"*\"\"\"*$\"\"#F'F%" }{TEXT 
-1 13 ", namely 95, " }}{PARA 15 "" 0 "" {TEXT -1 4 "but " }{XPPEDIT 
18 0 "91+3^2 = 100;" "6#/,&\"#\"*\"\"\"*$\"\"$\"\"#F&\"$+\"" }{TEXT 
-1 1 "," }{TEXT 696 1 " " }{TEXT -1 2 "is" }{TEXT 434 1 " " }{XPPEDIT 
18 0 "10^2;" "6#*$\"#5\"\"#" }{TEXT -1 1 "," }{TEXT 697 1 " " }{TEXT 
-1 6 "giving" }{TEXT 436 1 " " }{XPPEDIT 18 0 "91 = 10^2-3^2;" "6#/\"#
\"*,&*$\"#5\"\"#\"\"\"*$\"\"$F(!\"\"" }{TEXT -1 0 "" }{TEXT 698 3 " = \+
" }{XPPEDIT 18 0 "(10-3)(10+3);" "6#-,&\"#5\"\"\"\"\"$!\"\"6#,&F%F&F'F
&" }{TEXT -1 0 "" }{TEXT 699 3 " = " }{TEXT -1 4 "7*13" }}{PARA 262 "
" 0 "" {TEXT -1 1 "\n" }{TEXT 432 91 "Even this crude procedure that I
've written factors the above 130-digit number immediately:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 190 "Fermat_factor := proc(n, st
art, finish)  \nlocal k, s;\nfor k from start to finish do\nif issqr(n
+k^2) then s := sqrt(n+k^2); \nlprint(n,`is the product of`, s-k,`and`
,s+k); \nRETURN() fi od end:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 36 "Fermat_factor(beyondRSA129, 0, 300);" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 163 "That entir
ely success was however due to the arranged fact that the two primes -
 although both reasonably large - happened to be so relatively close t
o each other." }{TEXT 439 2 " \n" }{TEXT -1 187 "Suppose, however, one
 choose them so that they were quite far apart? That's what I'm now go
ing to do. This time I will make up another number - I will call it 'B
EYONDRSA129' - as follows:" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 
15 "" 0 "" {TEXT -1 37 "it will be - like beyondRSA129 - the " }{TEXT 
489 7 "product" }{TEXT -1 29 " of two primes 'P1' and 'Q1' " }}{PARA 
15 "" 0 "" {TEXT -1 30 "I will still choose P1 to be P" }}{PARA 15 "" 
0 "" {TEXT -1 27 "I will now choose Q1 to be " }{TEXT 700 4 "much" }
{TEXT -1 16 " greater than P1" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 
0 9 "P1 := f2;" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 124 "Q1 := ne
xtprime(44701154615126843408912571381250511100768007002829050158190800
92370422104067183317016903679999999999999630);" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 22 "BEYONDRSA129 := P1*Q1;" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 21 "length(BEYONDRSA129);" }}}{EXCHG {PARA 0 "> " 
0 "" {MPLTEXT 1 0 28 "BEYONDRSA129 - beyondRSA129;" }}}{EXCHG {PARA 0 
"> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 9 "But \+
that " }{TEXT 701 11 "much larger" }{TEXT -1 19 " number can now be " 
}{TEXT 702 7 "quickly" }{TEXT -1 24 " factored by doing this:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 304 "Pollard:=proc(n)\nlocal a,k
;\na[1]:=2:\nfor k from 2 while igcd(n,a[k-1]-1 mod n)=1   \ndo a[k]:=
a[k-1]&^k mod n od;\nlprint(n,`is the product of`,                    \+
                                                                      \+
        igcd(n, a[k-1]-1 mod n), `and`, \nn/igcd(n, a[k-1]-1 mod n))\n
end:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "Pollard(BEYONDRSA12
9);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 
264 "" 0 "" {TEXT 497 12 "WONDERFUL!!!" }{TEXT -1 23 " (I hope you agr
ee...)\n" }}{PARA 266 "" 0 "" {TEXT 442 297 "The mathematical ideas be
hind the success of that factorisation are due to an English mathemati
cian, John Pollard (he lives outside Reading, and has a great interest
 in the music of Handel), and were published by him in 1974 in the Mat
hematical Proceedings of the Cambridge Philosophical Society, " }
{TEXT -1 0 "" }{TEXT 444 82 "in a now famous paper. The method he deve
lops there has become known as Pollard's " }{XPPEDIT 18 0 "p-1;" "6#,&
%\"pG\"\"\"F%!\"\"" }{TEXT -1 27 " method, and with reason: i" }{TEXT 
465 152 "n that paper he expounds a very beautiful idea - which uses F
ermat's little theorem - which enables one to factor a number, one of \+
whose prime factors '" }{TEXT 703 1 "p" }{TEXT 705 2 "' " }{TEXT 498 
7 "is such" }{TEXT 451 1 " " }{TEXT 454 0 "" }{TEXT 452 4 "that" }
{TEXT 706 12 " the number " }{XPPEDIT 18 0 "p-1;" "6#,&%\"pG\"\"\"F%!
\"\"" }{TEXT -1 1 " " }{TEXT 455 20 "has only relatively " }{TEXT 704 
5 "small" }{TEXT 707 6 " prime" }{TEXT 457 1 " " }{TEXT 459 8 "factors
." }{TEXT 461 1 " " }{TEXT 462 115 "That is why I was able so quickly \+
to factor the number BEYONDRSA129. Look at how its prime factor Q1 is \+
structured:" }{TEXT -1 0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
16 "ifactor(Q1 - 1);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}
}{EXCHG {PARA 0 "" 0 "" {TEXT -1 74 "Can you guess what the number Q1 \+
really is, given that I have let you see " }{XPPEDIT 18 0 "Q1-1;" "6#,
&%#Q1G\"\"\"F%!\"\"" }{TEXT -1 76 "?... See, however, the two prime fa
ctors - f1 and f2 - of the RSA129 number:" }{TEXT 499 0 "" }{TEXT -1 
0 "" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "ifactor(f1 - 1);" }}
}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "ifactor(f2 - 1);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{PARA 268 "" 0 "" {TEXT 
-1 34 "Rivest, Shamir and Adleman really " }{TEXT 708 4 "knew" }{TEXT 
-1 34 " what they were doing in choosing " }{TEXT 709 5 "their" }
{TEXT -1 23 " two primes to make up " }{TEXT 710 5 "their" }{TEXT -1 
28 " 129 digit number, RSA129..." }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}
{PARA 0 "" 0 "" {TEXT 715 0 "" }{TEXT 500 0 "" }{TEXT 501 11 "A summar
y. " }{TEXT 466 52 "The current security of the RSA method rests on th
e " }{TEXT 711 35 "general difficulty of factorisation" }{TEXT 502 26 
" ... . Besides the Pollard" }{TEXT 469 1 " " }{XPPEDIT 18 0 "p-1;" "6
#,&%\"pG\"\"\"F%!\"\"" }{TEXT 712 1 " " }{TEXT 470 26 "method, there i
s also his " }{TEXT 503 4 "rho-" }{TEXT 504 16 "method (aka his " }
{TEXT 505 11 "Monte Carlo" }{TEXT 506 28 " method), and the Pomerance \+
" }{TEXT 507 16 "quadratic sieve " }{TEXT 508 52 "method, and (Dutch m
athematician) Hendrik Lenstra's " }{TEXT 509 14 "elliptic curve" }
{TEXT 510 46 " method, and the current dominant method: the " }{TEXT 
511 19 "Number Field Sieve " }{TEXT 512 65 "method (introduced by Poll
ard, and added to by many others). The " }{TEXT 713 8 "historic" }
{TEXT 714 306 " creation by Agrawal, Kayal, and Saxena (India) in the \+
summer of 2002 of a (long-sought) polynomial time algorithm for primal
ity testing, has raised once again the possibility that someone, at so
me future date, may create such an algorithm for factoring (and, like \+
A, K, and S) enter the history books...)\n" }{TEXT 472 14 "\nA bit of \+
fun:" }{TEXT -1 0 "" }}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 42 "AKS1 \+
:= to_number(`Agrawal-Kayal-Saxena`);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 14 "ifactor(AKS1);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 42 "AKS2 := to_number(`Agrawal_Kayal_Saxena`);" }}}{EXCHG {PARA 0 
"> " 0 "" {MPLTEXT 1 0 14 "ifactor(AKS2);" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}}{SECT 1 {PARA 3 "" 0 "" {XPPEDIT 18 0 "phi(n);
" "6#-%$phiG6#%\"nG" }{TEXT -1 1 " " }{TEXT 789 24 "(the Euler phi-val
ue of " }{TEXT 740 1 "n" }{TEXT 790 20 "), if I have time..." }{TEXT 
-1 0 "" }{TEXT 611 0 "" }}{PARA 0 "" 0 "" {TEXT -1 22 "I would like to
 touch " }{TEXT 743 7 "briefly" }{TEXT -1 9 " on that " }{TEXT 742 8 "
critical" }{TEXT -1 10 " \"phi_n\" (" }{TEXT 741 2 "my" }{TEXT -1 17 "
 notation above)." }{TEXT 473 1 " " }{XPPEDIT 18 0 "phi(n);" "6#-%$phi
G6#%\"nG" }{TEXT -1 293 " - the Euler phi function - came on the mathe
matical scene through Euler's classic generalization of Fermat's littl
e theorem (I have devoted an entire section of my web site - with my p
ersonal year-2001 homage-lecture to mark the 400th anniversary of Ferm
at's birth - to that classic theorem):" }{TEXT 474 1 "\n" }{TEXT -1 9 
"Fermat's " }{TEXT 747 6 "little" }{TEXT -1 14 " theorem. Let " }
{TEXT 744 1 "p" }{TEXT -1 15 " be prime, and " }{TEXT 745 1 "a" }
{TEXT -1 16 " be any integer " }{TEXT 756 3 "not" }{TEXT -1 14 " divis
ible by " }{TEXT 746 1 "p" }{TEXT -1 6 ", then" }{TEXT 475 1 " " }
{TEXT -1 0 "" }{XPPEDIT 18 0 "a^(p-1);" "6#)%\"aG,&%\"pG\"\"\"F'!\"\"
" }{TEXT -1 0 "" }{TEXT 748 1 " " }{TEXT -1 34 "leaves remainder 1 on \+
division by " }{TEXT 749 1 "p" }{TEXT -1 3 ". \n" }{TEXT 476 1 "\n" }
{TEXT -1 48 "Euler's generalization of Fermat's theorem. Let " }{TEXT 
750 1 "n" }{TEXT -1 24 " be any natural number (" }{XPPEDIT 18 0 "1 < \+
n;" "6#2\"\"\"%\"nG" }{TEXT -1 27 ", prime or otherwise), and " }
{TEXT 751 1 "a" }{TEXT -1 30 " be any integer such that gcd(" }{TEXT 
754 1 "a" }{TEXT -1 2 ", " }{TEXT 755 1 "n" }{TEXT -1 11 ") = 1, then
" }{TEXT 478 1 " " }{TEXT -1 0 "" }{XPPEDIT 18 0 "a^phi(n);" "6#)%\"aG
-%$phiG6#%\"nG" }{TEXT -1 0 "" }{TEXT 752 1 " " }{TEXT -1 34 "leaves r
emainder 1 on division by " }{TEXT 753 1 "n" }{TEXT -1 8 " (where " }
{XPPEDIT 18 0 "phi(n);" "6#-%$phiG6#%\"nG" }{TEXT -1 40 " is the numbe
r of integers between 1 and" }{TEXT 482 1 " " }{TEXT -1 1 "(" }
{XPPEDIT 18 0 "n-1;" "6#,&%\"nG\"\"\"F%!\"\"" }{TEXT -1 31 ") that sha
re no common factor, " }{TEXT 758 14 "greater than 1" }{TEXT -1 7 ", w
ith " }{TEXT 757 1 "n" }{TEXT -1 2 ")." }{TEXT 480 1 "\n" }}{PARA 0 "
" 0 "" {TEXT -1 30 "Euler's beautiful formula for " }{XPPEDIT 18 0 "ph
i(n);" "6#-%$phiG6#%\"nG" }{TEXT -1 1 "." }{TEXT 574 2 "  " }{XPPEDIT 
18 0 "phi(n);" "6#-%$phiG6#%\"nG" }{TEXT -1 0 "" }{TEXT 761 3 " = " }
{TEXT 762 1 "n" }{TEXT 760 1 " " }{XPPEDIT 18 0 "Product(1-1/p[r]);" "
6#-%(ProductG6#,&\"\"\"F'*&F'F'&%\"pG6#%\"rG!\"\"F-" }{TEXT -1 19 ", w
here the product" }{TEXT 576 1 " " }{TEXT -1 22 "is evaluated over the
 " }{TEXT 767 8 "distinct" }{TEXT 768 1 " " }{TEXT -1 15 "prime diviso
rs " }{XPPEDIT 18 0 "p[1],p[2],p[3];" "6%&%\"pG6#\"\"\"&F$6#\"\"#&F$6#
\"\"$" }{TEXT -1 9 ", ... of " }{TEXT 763 1 "n" }{TEXT -1 1 "." }
{TEXT 578 22 "\n\nTwo examples only:\n\n" }{TEXT -1 8 "1. When " }
{TEXT 764 2 "n " }{TEXT -1 2 "= " }{TEXT 765 1 "p" }{TEXT -1 5 ", is \+
" }{TEXT 766 6 "itself" }{TEXT -1 9 " a prime," }{TEXT 580 1 " " }
{XPPEDIT 18 0 "phi(n) = phi(p);" "6#/-%$phiG6#%\"nG-F%6#%\"pG" }{TEXT 
769 3 " = " }{XPPEDIT 18 0 "p*(1-1/p) = p*(p-1)/p;" "6#/*&%\"pG\"\"\",
&F&F&*&F&F&F%!\"\"F)F&*(F%F&,&F%F&F&F)F&F%F)" }{TEXT 770 3 " = " }
{XPPEDIT 18 0 "p-1;" "6#,&%\"pG\"\"\"F%!\"\"" }{TEXT 779 1 "," }{TEXT 
-1 6 " the '" }{XPPEDIT 18 0 "p-1;" "6#,&%\"pG\"\"\"F%!\"\"" }{TEXT 
771 2 "' " }{TEXT -1 33 "of \n    Fermat's little theorem.\n" }{TEXT 
583 1 "\n" }{TEXT -1 8 "2. When " }{TEXT 772 2 "n " }{TEXT -1 2 "= " }
{TEXT 773 2 "pq" }{TEXT -1 21 ", the product of two " }{TEXT 776 8 "di
stinct" }{TEXT -1 9 " primes, " }{TEXT 582 1 "\n" }}{PARA 259 "" 0 "" 
{TEXT -1 0 "" }{TEXT 778 1 " " }{XPPEDIT 18 0 "phi(n) = phi(pq);" "6#/
-%$phiG6#%\"nG-F%6#%#pqG" }{TEXT 774 3 " = " }{XPPEDIT 18 0 "(p*q)(1-1
/p)*(1-1/q) = p*q*(p-1)/p*(q-1)/q;" "6#/*&-*&%\"pG\"\"\"%\"qGF(6#,&F(F
(*&F(F(F'!\"\"F-F(,&F(F(*&F(F(F)F-F-F(*.F'F(F)F(,&F'F(F(F-F(F'F-,&F)F(
F(F-F(F)F-" }{TEXT 775 3 " = " }{XPPEDIT 18 0 "(p-1)*(q-1);" "6#*&,&%
\"pG\"\"\"F&!\"\"F&,&%\"qGF&F&F'F&" }{TEXT 780 1 "," }{TEXT -1 1 " " }
}{PARA 0 "" 0 "" {TEXT 777 5 "\n    " }{TEXT -1 5 "the '" }{XPPEDIT 
18 0 "(p-1)*(q-1);" "6#*&,&%\"pG\"\"\"F&!\"\"F&,&%\"qGF&F&F'F&" }
{TEXT -1 21 "' of the RSA method.\n" }{TEXT 584 1 "\n" }{TEXT -1 33 "M
aple has a command for computing" }{TEXT 598 1 " " }{XPPEDIT 18 0 "phi
(n);" "6#-%$phiG6#%\"nG" }{TEXT 759 1 " " }{TEXT -1 124 "(it requires \+
loading Maple's Number Theory package; the items are alphabetically li
sted, and 'phi' is just after 'pdexpand')" }{TEXT 600 1 " " }}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 16 "with(numtheory);" }}}{EXCHG {PARA 
0 "> " 0 "" {MPLTEXT 1 0 8 "phi(13);" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 8 "phi(15);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 8 "
phi(25);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "phi(12345678910
987654321);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "p[1] := nextprime(1234);" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 24 "q[1] := nextprime(5678);" }}
}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "n[1] := p[1]*q[1];" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 47 "n[1]*(1 - 1/p[1])*(1 - 1/q[1
]); # Euler formula" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 26 "phi(
n[1]); # Maple command" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" 
}}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 20 "But what about, say:" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "p[2] := nextprime(10^24 + ra
nd()^2);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "length(p[2]);" 
}}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 42 "q[2] := nextprime(10^29 +
 54321*rand()^2);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "length
(q[2]);" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 18 "n[2] := p[2]*q[2
];" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 0 "" }}}{EXCHG {PARA 0 "
" 0 "" {TEXT -1 29 "Here NOW - I hope - you will " }{TEXT 781 3 "see" 
}{TEXT -1 16 " the difference:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 47 "n[2]*(1 - 1/p[2])*(1 - 1/q[2]); # Euler formula" }}}{EXCHG 
{PARA 259 "" 0 "" {TEXT -1 0 "" }{TEXT 782 8 "BUT FOR:" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "# phi(n[2]); " }{TEXT -1 0 "" }}}
{EXCHG {PARA 0 "" 0 "" {TEXT -1 40 "the computation clock comes on... \+
Maple " }{TEXT 783 6 "cannot" }{TEXT -1 16 " quickly compute" }{TEXT 
586 1 " " }{XPPEDIT 18 0 "phi(n[2]);" "6#-%$phiG6#&%\"nG6#\"\"#" }
{TEXT -1 33 " because - to do so - it needs to" }{TEXT 604 1 " " }
{TEXT -1 7 "factor " }{XPPEDIT 18 0 "n[2];" "6#&%\"nG6#\"\"#" }{TEXT 
-1 18 " in order to find " }{XPPEDIT 18 0 "p[2];" "6#&%\"pG6#\"\"#" }
{TEXT -1 5 " and " }{XPPEDIT 18 0 "q[2];" "6#&%\"qG6#\"\"#" }{TEXT -1 
36 ", to use Euler's formula to evaluate" }{TEXT 602 1 " " }{XPPEDIT 
18 0 "phi(n[2]);" "6#-%$phiG6#&%\"nG6#\"\"#" }{TEXT -1 73 ", and here \+
they have only 25 and 30 digits... That should explain to you " }
{TEXT 785 3 "why" }{TEXT -1 18 " earlier I had to " }{TEXT 786 6 "defi
ne" }{TEXT -1 9 " 'phi_nA'" }{TEXT 606 1 " " }{TEXT -1 10 "(with the \+
" }{TEXT 788 5 "known" }{TEXT -1 60 " values of pA and qA) in the RSA \+
demonstration: Maple could " }{TEXT 787 3 "not" }{TEXT -1 62 " itself \+
have carried out the computation had I used phi(nA)..." }}}}{SECT 1 
{PARA 3 "" 0 "" {TEXT 791 53 "The two primary references, and a book r
ecommendation" }{TEXT -1 1 "\n" }{TEXT 613 0 "" }}{PARA 0 "" 0 "" 
{TEXT -1 32 "1. W. Diffie and M. E. Hellman, " }{TEXT 723 30 "New dire
ctions in cryptography" }{TEXT -1 2 ", " }{TEXT 724 46 "IEEE Transacti
ons on Information Theory IT-22 " }{TEXT -1 17 "(1976), 644-654.\n" }
{TEXT 608 1 "\n" }{TEXT -1 3 "2. " }{TEXT 488 43 "L. M. Adelman, R. L.
 Rivest and A. Shamir, " }{TEXT 719 70 "A method for obtaining digital
 signatures and public-key cryptosystems" }{TEXT 720 2 ", " }{TEXT 
721 25 "Communications of the ACM" }{TEXT 722 81 ", 21 (1978), 120-126
. (It made its way into the public domain the previous year) " }}
{PARA 269 "" 0 "" {TEXT -1 22 "______________________" }}{PARA 0 "" 0 
"" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT 610 83 "If you don't already \+
know of it - or do, but don't yet have a copy - then seek out " }
{TEXT 725 7 "In Code" }{TEXT 726 2 " (" }{TEXT 727 22 "A Mathematical \+
Journey" }{TEXT 728 189 ") by remarkable young Irish woman Sarah Flann
ery, and her co-author father David Flannery (mathematician, and teach
er extraordinaire). Check out (rave) reviews at the MAA and AMS web si
tes." }}}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" {TEXT -1 0 "
" }}}{MARK "9" 0 }{VIEWOPTS 1 1 0 1 1 1803 1 1 1 1 }{PAGENUMBERS 0 1 
2 33 1 1 }
